@{ ViewData["Title"] = "Products";
}
<h4 class="text-center">Danh sách sản phẩm</h4>
<div class="row" id="vueDataProducts">
    <p>
        <button class="btn btn-sm btn-success" v-on:click="showCreateModal">Thêm mới</button>
        <button class="btn btn-sm btn-info mx-2" v-on:click="refreshData">Làm mới dữ liệu</button>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th>Image</th>
                <th>Price</th>
                <th>Description</th>
                <th>Dicount Price</th>
                <th>InStock</th>
                <th>Category</th>
                <th>Create At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="item in products">
                <td>{{item.id}}</td>
                <td>{{item.name}}</td>
                <td>{{item.coverImg}}</td>
                <td>{{item.price}}</td>
                <td>{{item.description}}</td>
                <td>{{item.discountPrice}}</td>
                <td>{{item.inStock}}</td>
                <td>{{item.categoryId}}</td>
                <td>{{new Date(item.createAt).toLocaleString()}}</td>
                <td>
                    <button class="btn btn-sm btn-info mx-1"><i class="fas fa-eye"></i></button>
                    <button v-on:click="getDataForUpdate(item.id)" class="btn btn-sm btn-warning mx-1"><i class="fas fa-edit"></i></button>
                    <button v-on:click="deleteProduct(item.id)" class="btn btn-sm btn-danger mx-1"><i class="fas fa-trash"></i></button>
                </td>
            </tr>
        </tbody>
    </table>
    <partial name="_Create" />
</div>
@section Scripts{
    <script>
        let options = {
            minDurations: {
                'async-block': 300,
                'async': 300
            }
        }
        let noti = new AWN(options);

        const productsAPI = '/Admin/Product/GetAll';
        const categoriesAPI = '/Admin/Category/GetAll';

        Vue.createApp({
            data() {
                return {
                    products: [],
                    categories: [],
                    mCreate: {},
                    action: '',
                    proData: {
                        id: 0,
                        categoryId: null,
                        coverImg: null,
                        description: null,
                        discountPrice: null,
                        inStock: null,
                        name: null,
                        price: null,
                    }
                }
            },
            methods: {
                refreshData() {
                    noti.asyncBlock(
                        axios.get(productsAPI),
                        (res) => {
                            let data = res.data;
                            this.products = data;
                            noti.success(`Tải ${data.length} sản phẩm thành công!`)
                        },
                        (err) => {
                            noti.alert(err);
                        },
                        'Chờ xíu'
                    )
                },
                showCreateModal() {
                    this.clearData();
                    this.action = 'Thêm';
                    this.mCreate.show();
                },
                addOrUpdate() {
                    let url = '/Admin/Product/Create';
                    if (this.proData.id != 0) {
                        url = '/Admin/Product/Update/' + this.proData.id;
                    }
                    noti.async(
                        axios.post(url, this.proData),
                        (res) => {
                            noti.success(this.action + ' sản phẩm thành công!');
                            this.refreshData();
                            this.mCreate.hide();
                        },
                        (err) => {
                            noti.alert(err);
                        }
                    )
                },
                deleteProduct(id) {
                    noti.async(
                        axios.get('/Admin/Product/Delete/' + id),
                        () => {
                            noti.success('Xóa sản phẩm thành công!');
                            this.refreshData();
                        },
                        (err) => {
                            noti.alert(err);
                        }
                    )
                },
                clearData() {
                    this.proData.id = 0;
                    this.proData.categoryId = null;
                    this.proData.coverImg = null;
                    this.proData.description = null;
                    this.proData.discountPrice = null;
                    this.proData.inStock = null;
                    this.proData.name = null;
                    this.proData.price = null;
                },
                getDataForUpdate(id) {
                    noti.asyncBlock(
                        axios.get('/Admin/Product/GetDataForUpdate/' + id),
                        (res) => {
                            let data = res.data;
                            this.proData = data;
                            this.action = 'Cập nhật';
                            this.mCreate.show();
                        },
                        (err) => {
                            noti.alert(err);
                        }
                    )
                },
                getCategories() {
                    axios.get(categoriesAPI)
                        .then(res => {
                            let data = res.data;
                            this.categories = data;
                        })
                        .catch(err => {
                            noti.alert(err);
                        })
                }

            },
            mounted() {
                this.mCreate = new bootstrap.Modal(document.getElementById('exampleModal'));
                this.refreshData();
                this.getCategories();
            }
        }).mount('#vueDataProducts');
    </script>
}