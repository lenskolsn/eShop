@using eShop.Areas.Admin.ViewModels.Category
@model IEnumerable<ListItemCategoryVM>

@{
    ViewData["Title"] = "Product Category";
}
<h1 class="text-center">Danh mục sản phẩm</h1>


@if (TempData["Err"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>@TempData["Err"]</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}@if (TempData["SuccessMess"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>@TempData["SuccessMess"]</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div id="vueData">

    <button v-on:click="showCreateModel()" class="btn btn-success mb-2"><i class="fas fa-plus"></i> Thêm mới</button> <br />

    <button class="btn btn-info mb-2 text-light" v-on:click="refreshData()"><i class="fas fa-undo"></i> Làm mới dữ liệu</button>

    <table class="table table-bordered table-hover table-striped">
        <thead>
            <tr>
                <th>
                    #
                </th>
                <th>
                    Tên danh mục
                </th>
                <th>
                    Tạo lúc
                </th>
                <th class="text-center">
                    Thao tác
                </th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="item in categories">
                <td>{{item.id}}</td>
                <td>{{item.name}}</td>
                <td>{{new Date(item.createAt).toLocaleString()}}</td>
                <td class="text-center">
                    <button v-on:click="getDataForUpdate(item.id)" class="btn btn-sm btn-warning"><i class="fas fa-edit"></i></button>
                    <button v-on:click="deleteCategory(item.id)" class="btn btn-sm btn-danger mx-2"><i class="fas fa-trash"></i></button>
                </td>
            </tr>
        </tbody>
    </table>
    <partial name="_Create" />
</div>


@section Scripts{
    <script>
        let noti = new AWN(); // awesome-notifications

        let modalCreate = new bootstrap.Modal("#modalCreate");

        Vue.createApp({
            data() {
                return {
                    action: '',
                    mCreate: {},
                    categories: [],
                    cateData: {
                        id: 0,
                        name: null
                    }
                }
            },
            methods: {
                // hiển thị popup tạo danh mục
                showCreateModel() {
                    // gán lại dữ liệu
                    this.cateData.id = 0;
                    this.cateData.name = null;
                    this.action = 'Thêm mới';
                    this.mCreate.show();
                },
                // thêm danh mục
                addOrUpdate() {
                    if (!this.cateData.name) {
                        noti.warning('Chưa nhập dữ liệu!');
                        return;
                    }
                    let url = '/Admin/Category/Create';
                    if (this.cateData.id != 0) {
                        url = '/Admin/Category/Update/' + this.cateData.id;
                    }

                    noti.async(
                        // gọi ajax đến action Create
                        axios.post(url, this.cateData),
                        // thành công
                        (res) => {
                            var data = res.data;
                            if (data.success) {
                                noti.success(this.action + " danh mục thành công!");
                                // tắt popup modal
                                this.mCreate.hide();

                                // load lại dữ liệu trang index
                                this.refreshData();
                            } else {
                                noti.warning(data.mesg)
                            }
                        }
                    );
                },
                // lấy dữ liệu cho hàm update
                getDataForUpdate(id) {
                    noti.async(
                        // gọi ajax đến action Create
                        axios.get("/Admin/Category/GetForUpdate/" + id),
                        // thành công
                        (res) => {
                            var data = res.data;
                            this.cateData = { ...data }; // copy data
                            this.mCreate.show();
                            this.action = 'Cập nhật';
                            console.log(data);
                        }
                    );
                },
                // xóa danh mục
                deleteCategory(id) {
                    console.log(id)
                    noti.confirm(
                        "Xác nhận xóa dữ liệu này?",
                        () => {
                            noti.async(
                                // gọi ajax đến action Delete
                                axios.get("/Admin/Category/Delete/" + id),
                                // thành công
                                (res) => {
                                    var data = res.data;
                                    if (data.success) {
                                        noti.success("Xóa danh mục thành công!");
                                        // load lại dữ liệu trang index
                                        this.refreshData();
                                    } else {
                                        noti.warning(data.mesg)
                                    }
                                }
                            );
                        },
                    )
                },
                // làm mới dữ liệu
                refreshData() {
                    noti.asyncBlock(
                        // gọi ajax
                        axios.get("/Admin/Category/GetAll")
                        ,
                        // thành công
                        (response) => {
                            console.log(response.data);
                            this.categories = response.data; // gán dữ liệu nhận dc vào data
                        }
                        ,
                        // thất bại
                        (err) => {
                            console.log(err);
                            noti.alert("Tải dữ liệu thất bại!")
                        }
                        ,
                        // nội dung chờ
                        "Chờ xíu"
                    )
                }
            },
            mounted() {
                this.mCreate = new bootstrap.Modal('#modalCreate');
                this.refreshData();
            }
        }).mount("#vueData")

    </script>
}